version: '3.8'

networks:
  byx-network:
    external: true


services:
  roteador:
    build: .
    container_name: roteador
    hostname: django.dev
    environment:
        CNAME: roteador-contrato
        APP_NAME: Awesome API
        AWS_REGION: us-east-1
        S3_BUCKET_NAME: file-testes
        AWS_ACCESS_KEY_ID: AKIATXIY74L2W3HB6WT2
        AWS_SECRET_ACCESS_KEY: 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
        S3_CUSTOM_DOMAIN: file-testes.s3.amazonaws.com
        AWS_URL_RABBIT: b-86318fde-e40f-46b1-96dd-e3e92af605b3.mq.us-east-1.amazonaws.com
        AWS_USER_RABBIT: byxcapital
        AWS_PASSWORD_RABBIT: cAGRAMBIAmILDuCel 
        COGNITO_CLIENT_ID: 1
        COGNITO_USER_POOL_ID: 1
        RABBITMQ_HOST: rabbitmq
        RABBITMQ_USER: user
        RABBITMQ_PASSWORD: password
        IS_PROD: False
        JWT_SECRET_KEY: Teste
        LOG_TAIL_TOKEN: ''
        URL_RABBIT_LOCAL: amqp://user:password@rabbitmq:5672
        IS_LOCAl: True
        ROUTING_KEYS: ('staging1', 'staging2', 'local1')
    ports:
      - "8002:8000"
    networks:
      - byx-network

  # dynamodb-local:
  #   container_name: dynamodb-local
  #   image: amazon/dynamodb-local
  #   ports:
  #     - "8010:8000"
  #   command: "-jar DynamoDBLocal.jar -inMemory -sharedDb"
  #   networks:
  #     - byx-network
